#version 440

layout (location = 0) in vec3 vertex_position;
layout (location = 1) in vec3 vertex_normal;
layout (location = 2) in vec2 tex_coords;

out vec4 EyeCoords;
out vec3 Normal;
out vec2 TexCoords;

uniform mat4 view;
uniform mat4 proj;
uniform mat4 model;

void main() {

    // Model-view matrix and normal transformation
    TexCoords = tex_coords;
    mat4 ModelViewMatrix = view * model;
    mat3 NormalMatrix = mat3(ModelViewMatrix);
    
    // Transform normal to view space and normalize it
    Normal = normalize(NormalMatrix * vertex_normal);
    
    // Transform vertex position to view space
    EyeCoords = ModelViewMatrix * vec4(vertex_position, 1.0);

    // Convert position to clip coordinates and pass along
    gl_Position = proj * view * model * vec4(vertex_position, 1.0);
}
